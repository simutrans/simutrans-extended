name: CI
on: [push, pull_request]


jobs:
  check-code-formatting:
    name: Code Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Code Check
        shell: bash
        run: ./cleanup_code.sh
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: run ./cleanup_code.sh



  sim-linux-sdl2:
    name: Linux (SDL2)
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake clang++-10 zlib1g-dev libbz2-dev libsdl2-dev libfreetype6-dev libfluidsynth-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          CC=clang-10 CXX=clang++-10 cmake .. -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended
          if-no-files-found: error


  sim-linux-posix:
    name: Linux (headless)
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake clang++-10 zlib1g-dev libbz2-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          CC=clang-10 CXX=clang++-10 cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended
          if-no-files-found: error


  sim-linux-debug-sdl2:
    name: Linux (Debug SDL2, single threaded)
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake g++-10 zlib1g-dev libbz2-dev libsdl2-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          CC=gcc-10 CXX=g++-10 cmake .. -DCMAKE_BUILD_TYPE=Debug -DSIMUTRANS_MULTI_THREAD=OFF
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended
          if-no-files-found: error


  makeobj-linux:
    name: Linux Makeobj
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake g++-10 zlib1g-dev libbz2-dev libpng-dev
      - name: Configure
        run: |
          mkdir build
          cd build
          CC=gcc-10 CXX=g++-10 cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) makeobj-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/makeobj/makeobj-extended
          if-no-files-found: error


  nettool-linux:
    name: Linux Nettool
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get -y update && sudo apt-get install -y --no-install-recommends build-essential cmake g++-10
      - name: Configure
        run: |
          mkdir build && cd build
          CC=gcc-10 CXX=g++-10 cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) nettool-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/nettools/nettool-extended
          if-no-files-found: error


  sim-mac-sdl2:
    name: macOS (SDL2)
    runs-on: macos-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Dependencies
        run: |
          brew install cmake freetype libpng pkg-config sdl2 fluidsynth
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: |
          cd build
          make -j$(sysctl -n hw.logicalcpu) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended
          if-no-files-found: error


  sim-mac-posix:
    name: macOS (headless)
    runs-on: macos-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(sysctl -n hw.logicalcpu) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended
          if-no-files-found: error


  makeobj-mac:
    name: macOS Makeobj
    runs-on: macos-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(sysctl -n hw.logicalcpu) makeobj-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/makeobj/makeobj-extended
          if-no-files-found: error


  nettool-mac:
    name: macOS Nettool
    runs-on: macos-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(sysctl -n hw.logicalcpu) nettool-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/nettools/nettool-extended
          if-no-files-found: error


  sim-mingw-sdl2:
    name: Windows (MinGW, SDL2)
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=sdl2
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended.exe
          if-no-files-found: error


  sim-mingw-gdi:
    name: Windows (MinGW, GDI)
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=gdi
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended.exe
          if-no-files-found: error


  sim-mingw-posix:
    name: Windows (MinGW, headless)
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) simutrans-extended
          make package
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended.exe
          if-no-files-found: error


  makeobj-mingw:
    name: Windows Makeobj (MinGW)
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) makeobj-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/makeobj/makeobj-extended.exe
          if-no-files-found: error


  nettool-mingw:
    name: Windows Nettool (MinGW)
    runs-on: ubuntu-latest
    needs: check-code-formatting
    if: always()
    container:
      image: ceeac/simutrans-build-env:mingw-sdl2
    steps:
      - name: Additional setup
        run: sudo dnf -y install git cmake
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./.github/toolchain_mingw.cmake -DSIMUTRANS_BACKEND=none
      - name: Build
        run: |
          cd build
          make -j$(nproc) nettool-extended
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/nettools/nettool-extended.exe
          if-no-files-found: error


  sim-windows-gdi:
    name: Windows (MSVC, GDI)
    runs-on: windows-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies using vcpkg
        uses: lukka/run-vcpkg@v4.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
          vcpkgArguments: '--disable-metrics zlib bzip2 libpng'
          vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
          vcpkgTriplet: x64-windows-static
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=gdi -G "Visual Studio 16 2019" -A x64 -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          cmake --build . --target simutrans-extended --config Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended.exe
          if-no-files-found: error


  sim-windows-sdl2:
    name: Windows (MSVC, SDL2)
    runs-on: windows-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up build dir
        run: mkdir ${{ github.workspace }}/build
      - name: Install dependencies using vcpkg
        uses: lukka/run-vcpkg@v4.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
          vcpkgArguments: '--disable-metrics zlib bzip2 sdl2 libpng'
          vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
          vcpkgTriplet: x64-windows-static
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=sdl2 -G "Visual Studio 16 2019" -A x64 -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          cmake --build . --target simutrans-extended --config Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended.exe
          if-no-files-found: error


  sim-windows-headless:
    name: Windows (MSVC, headless, zstd, UPNP)
    runs-on: windows-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up build dir
        run: mkdir ${{ github.workspace }}/build
      - name: Install dependencies using vcpkg
        run: |
          cd ${{ github.workspace }}/build
          git clone https://github.com/Microsoft/vcpkg
          ./vcpkg/bootstrap-vcpkg.bat
          ./vcpkg/vcpkg --triplet x64-windows-static install zlib bzip2 libpng zstd sdl2 freetype miniupnpc
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=none -G "Visual Studio 16 2019" -A x64 -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          cmake --build . --target simutrans-extended --config Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/simutrans/simutrans-extended.exe
          if-no-files-found: error


  makeobj-windows:
    name: Windows Makeobj (MSVC)
    runs-on: windows-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up build dir
        run: mkdir ${{ github.workspace }}/build
      - name: Install dependencies using vcpkg
        uses: lukka/run-vcpkg@v4.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
          vcpkgArguments: '--disable-metrics zlib bzip2 libpng'
          vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
          vcpkgTriplet: x64-windows-static
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=none -G "Visual Studio 16 2019" -A x64 -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          cmake --build . --target makeobj-extended --config Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/makeobj/Release/makeobj-extended.exe
          if-no-files-found: error


  nettool-windows:
    name: Windows Nettool (MSVC)
    runs-on: windows-latest
    needs: check-code-formatting
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up build dir
        run: mkdir ${{ github.workspace }}/build
      - name: Install dependencies using vcpkg
        uses: lukka/run-vcpkg@v4.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
          vcpkgArguments: '--disable-metrics zlib bzip2 libpng'
          vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
          vcpkgTriplet: x64-windows-static
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Configure
        run: |
          cd ${{ github.workspace }}/build
          cmake .. -DSIMUTRANS_BACKEND=none -G "Visual Studio 16 2019" -A x64 -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/build/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          cmake --build . --target nettool-extended --config Release
      - name: Upload Artifact (CI)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-nightly
          path: build/nettools/Release/nettool-extended.exe
          if-no-files-found: error
